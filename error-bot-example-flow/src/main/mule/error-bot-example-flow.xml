<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:jira="http://www.mulesoft.org/schema/mule/jira"
	xmlns:ms-aichain="http://www.mulesoft.org/schema/mule/ms-aichain"
	xmlns:mulechain-einstein1="http://www.mulesoft.org/schema/mule/mulechain-einstein1" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/mulechain-einstein1 http://www.mulesoft.org/schema/mule/mulechain-einstein1/current/mule-mulechain-einstein1.xsd
http://www.mulesoft.org/schema/mule/ms-aichain http://www.mulesoft.org/schema/mule/ms-aichain/current/mule-ms-aichain.xsd
http://www.mulesoft.org/schema/mule/jira http://www.mulesoft.org/schema/mule/jira/current/mule-jira.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="375c1057-f6f9-4def-aa3a-71acdc20f27e" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<anypoint-mq:config name="Anypoint_MQ_Config" doc:name="Anypoint MQ Config" doc:id="b3434dad-3355-454c-88ac-ba83b244e4b8" >
		<anypoint-mq:connection url="https://mq-us-east-1.anypoint.mulesoft.com/api/v1/organizations/f13f2d16-67c6-4c3c-be9e-e5272cf8af0a/environments/568dac07-cbdc-4c25-9469-ee8d8ec40ccb" clientId="138c598341014662aafadeccaf0dc0ac" clientSecret="3bd53651982C42Fda2770987EBf566B4" />
	</anypoint-mq:config>
	<mulechain-einstein1:config name="Einstein_AI_Config" doc:name="Einstein AI Config" doc:id="48a78de6-4ee3-4bdd-b133-2a02d6373b96" >
		<mulechain-einstein1:connection clientId="${e1.palonia.clientId}" clientSecret="${e1.palonia.clientSecret}" salesforceOrg="${e1.palonia.org}" />
	</mulechain-einstein1:config>
	<file:config name="File_Config" doc:name="File Config" doc:id="efcf533a-fb29-47d8-a1f5-c1d18a334e6e" />
	<configuration-properties doc:name="Configuration properties" doc:id="bfca69d5-1960-46eb-b760-ca0a74d247d0" file="dev-config.yaml" />
	<ms-aichain:config name="MuleSoft_AI_Chain_Config" llmType="OPENAI" configType="Configuration Json" modelName="gpt-3.5-turbo" doc:name="MuleSoft AI Chain Config" doc:id="cc9c0473-e812-412f-9660-41dd2299cb2b" filePath='#[mule.home ++ "/apps/" ++ app.name ++ "/dev-envVars.json"]' />
	<jira:config name="Jira_Connector_Config" doc:name="Jira Connector Config" doc:id="35a0cba0-ba19-4f3b-af1e-ffe566248a07" >
		<jira:basic-auth-connection username="123" password="234" baseUri="test-client" />
	</jira:config>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="3df648b0-8662-4c9c-8464-572012627e58" >
    	<db:my-sql-connection host="${db.host}" port="${db.port}" user="${db.user}" password="${db.password}" database="${db.database}" />
	</db:config>
	<flow name="example-message-listener-flow" doc:id="fe7de68e-1edf-49e4-b0d5-18a35015c2a1" >
		<http:listener doc:name="Listener" doc:id="c275175f-e5c7-44af-8eae-d3222e7420ab" config-ref="HTTP_Listener_config" path="/test">
			<http:response statusCode="#[vars.statusCode]" />
		</http:listener>
		<logger level="INFO" doc:name="Log message recevied from 3rd party" doc:id="6790d2e8-b0b4-456f-9a26-ae21a6c43d6d" message='#[output json --- payload]'/>
		<json:validate-schema doc:name="Validate message against JSON schema" doc:id="ce1a734e-5c92-41ab-b279-edead741467a" schema="schemas/example_request_schema.json"/>
		<logger level="INFO" doc:name="Log schema validated message" doc:id="432eacfd-008e-423f-af4f-154a9c0a41a1" message='#[output json ---&#10;{message: "Schema validated"}]'/>
		<db:insert doc:name="Insert into homegrown app database" doc:id="a858a63d-7428-4a60-ba69-290a8134106b" config-ref="Database_Config">
			<db:sql ><![CDATA[INSERT INTO reservations (guest_name, room_type, check_in_date)
VALUES (:guest_name, :room_type, :check_in_date);
]]></db:sql>
			<db:input-parameters ><![CDATA[#[payload]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="Create response" doc:id="8bb8ff27-a4ca-4d8f-8256-6dd829c18991" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Reservation received"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="statusCode" ><![CDATA["201"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="ebb84202-4841-4d37-bce9-7540764a91cf" type="JSON:SCHEMA_NOT_HONOURED">
				<ee:transform doc:name="Save path to JSON schema" doc:id="28cbc36c-632b-492e-bb0d-0474456c1983" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="schema_path" ><![CDATA[%dw 2.0
output text/plain
var xmlString = error.dslSource as String
var schemaPath = (xmlString scan /schema="([^\"]*)"/)[0][1] // Get the first match and capture group 1
---
schemaPath
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<anypoint-mq:publish doc:name="Publish to AI error reprocessing queue" doc:id="b80044a2-d54a-40e1-978c-5dd32680e238" config-ref="Anypoint_MQ_Config" destination="mulesoft.error.bot.reprocess">
					<anypoint-mq:properties ><![CDATA[#[output json ---
{
	error_exception: error.exception.message,
	schema_path: vars.schema_path,
	callback_url: "http://localhost:8081/test"
}]]]></anypoint-mq:properties>
				</anypoint-mq:publish>
				<logger level="INFO" doc:name="Log error sent to AI reprocessor" doc:id="2dc80181-98f3-4b97-9532-699d291606dc" message='#[{&#10;	message: "Error sent to AI error reprocessor"&#10;}]'/>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="ai-error-reprocessing-flow" doc:id="3a907c5d-f116-4ae6-bb36-43432dfe916c" >
		<anypoint-mq:subscriber doc:name="Subscribe to AI error reprocessing queue" doc:id="2374c213-9b36-4aca-8072-bdd22ad42e33" config-ref="Anypoint_MQ_Config" destination="mulesoft.error.bot.reprocess" acknowledgementMode="IMMEDIATE"/>
		<logger level="INFO" doc:name="Log error message received" doc:id="715e3232-0856-40bf-9b46-4db680a99df6" message='#[{&#10;	message: "Error message received"&#10;}]'/>
		<set-variable value="#[attributes.properties.callback_url]" doc:name="Save call back URL for reprocessing" doc:id="0ffc4948-1759-42f0-9b2d-9f19b50d113f" variableName="callback_url"/>
		<file:read doc:name="Load JSON schema for grounding LLM" doc:id="559da893-3816-4bc6-ab87-321c1c8012be" path="#[p('app.home') ++&quot;/&quot; ++(attributes.properties.schema_path default &quot;&quot;)]" config-ref="File_Config" target="schema_file"/>
		<ee:transform doc:name="Create grounded LLM prompt" doc:id="f7fffe3a-859e-4555-8734-bf560bfde296">
			<ee:message>
			</ee:message>
			<ee:variables >
				<ee:set-variable resource="llm-prompts/error-bot-reprocess.dwl" variableName="prompt" />
			</ee:variables>
		</ee:transform>
		<ms-aichain:chat-answer-prompt doc:name="OpenAI answer prompt" doc:id="aeab18aa-205c-49b8-8b53-9583a2866f5e" config-ref="MuleSoft_AI_Chain_Config">
			<ms-aichain:prompt ><![CDATA[#[vars.prompt]]]></ms-aichain:prompt>
		</ms-aichain:chat-answer-prompt>
		<ee:transform doc:name="Extract JSON from LLM response" doc:id="27f6344e-d41d-4971-ad42-57670d2c2c0f">
			<ee:message >
				<ee:set-payload ><![CDATA[output json 
--- 
read(payload.response default "", "application/json")]]></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Log LLM generated response" doc:id="fec186e4-7067-434a-84ee-305f45f7f8da" message='#[{&#10;	message: "LLM generated payload",&#10;	data: payload&#10;}]' />
		<json:validate-schema doc:name="Validate LLM created JSON" doc:id="6246c5c3-e638-43da-990c-9a616ab7e2c7">
			<json:contents ><![CDATA[#[write(vars.schema_file,"application/json") as String]]]></json:contents>
		</json:validate-schema>
		<http:request method="POST" doc:name="Send LLM created JSON to call back URL for reprocessing" doc:id="f9474a9f-15c9-44e5-9a82-100b7b6a8226" url="#[vars.callback_url]">
			<http:body ><![CDATA[#[{message: "LLM created this"} ++ payload]]]></http:body>
		</http:request>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="LLM fails to generate payload that adheres to schema" doc:id="9a8cb984-a5ce-43b3-835f-6fd8b97f2316" type="JSON:SCHEMA_NOT_HONOURED">
				<ee:transform doc:name="Create JIRA ticket payload" doc:id="918e9f6a-f513-46bb-86e8-c6cda6a53dd0" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<jira:create-rest-api3-issue doc:name="Create issue in JIRA for Human investigation and reprocessing" doc:id="2cbdd673-3acb-4fdb-8069-00c41c4f5166" config-ref="Jira_Connector_Config"/>
			</on-error-continue>
		</error-handler>
	</flow>
</mule>
